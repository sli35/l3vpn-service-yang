<?xml version="1.0" encoding="US-ASCII"?>
<!DOCTYPE rfc SYSTEM ".tools/schema/rfc2629.dtd" [
<!ENTITY % netmod SYSTEM ".tools/bplate/netmod.ent">
%netmod;
<!ENTITY % figures SYSTEM "figures.ent">
%figures;
<!ENTITY % yang SYSTEM "yang.ent">
%yang;
<!ENTITY RFC2119 SYSTEM "http://xml2rfc.ietf.org/public/rfc/bibxml/reference.RFC.2119.xml">
<!ENTITY RFC6020 SYSTEM "http://xml2rfc.ietf.org/public/rfc/bibxml/reference.RFC.6020.xml">
<!ENTITY RFC4577 SYSTEM "http://xml2rfc.ietf.org/public/rfc/bibxml/reference.RFC.4577.xml">
<!ENTITY RFC4110 SYSTEM "http://xml2rfc.ietf.org/public/rfc/bibxml/reference.RFC.4110.xml">
<!ENTITY RFC4364 SYSTEM "http://xml2rfc.ietf.org/public/rfc/bibxml/reference.RFC.4364.xml">
<!ENTITY RFC4862 SYSTEM "http://xml2rfc.ietf.org/public/rfc/bibxml/reference.RFC.4862.xml">
<!ENTITY RFC6241 SYSTEM "http://xml2rfc.ietf.org/public/rfc/bibxml/reference.RFC.6241.xml">
<!ENTITY RFC6513 SYSTEM "http://xml2rfc.ietf.org/public/rfc/bibxml/reference.RFC.6513.xml">
]>

<?rfc strict="yes" ?>
<?rfc toc="yes"?>
<?rfc tocdepth="4"?>
<?rfc symrefs="yes"?>
<?rfc sortrefs="yes" ?>
<?rfc compact="yes" ?>
<?rfc subcompact="no" ?>

<rfc category="std">
  <front>
    <title abbrev="l3vpn-svc-cfg">YANG Data Model for L3VPN service delivery</title>
    <author fullname="Stephane Litkowski" initials="S" surname="Litkowski">
      <organization>Orange Business Service</organization>
      <address>
        <email>stephane.litkowski@orange.com</email>
      </address>
    </author>
	<author fullname="Rob Shakir" initials="R" surname="Shakir">
      <organization>BT</organization>
      <address>
        <email>rob.shakir@bt.com</email>
      </address>
    </author>
	<author fullname="Luis Tomotaki" initials="L" surname="Tomotaki">
      <organization>Verizon</organization>
      <address>
        <email>luis.tomotaki@verizon.com</email>
      </address>
    </author>
	<author fullname="Kevin D'Souza" initials="K" surname="D'Souza">
      <organization>ATT</organization>
      <address>
        <email>kd6913@att.com</email>
      </address>
    </author>
    <date year="2015"/>
    <area/>
    <workgroup>L3SM Working Group</workgroup>

    <abstract>
      <t>This document defines a YANG data model that can be used to deliver a
      Layer 3 Provider Provisioned VPN service. The document is limited to the
      BGP PE-based VPNs as described in RFC4110 and RFC4364. 
	  This model is
      intended to be instantiated at management system to deliver the overall
      service. This model is not a configuration model to be used directly on
      network elements. This model provides an abstracted view of the Layer 3
      IPVPN service configuration components. It will be up to a management
      system to take this as an input and use specific configurations models
      to configure the different network elements to deliver the service. How
      configuration of network elements is done is out of scope of the
      document. 
	  </t>
    </abstract>
    <note title="Requirements Language">
      <t>The key words "MUST", "MUST NOT", "REQUIRED", "SHALL", "SHALL
      NOT", "SHOULD", "SHOULD NOT", "RECOMMENDED", "MAY", and
      "OPTIONAL" in this document are to be interpreted as described
      in <xref target="RFC2119"/>.</t>
    </note>
  </front>
  <middle>
    <section anchor="introduction" title="Introduction">
      <t>
      This document defines a YANG data model for Layer 3 IPVPN service configuration.</t>
      <section anchor="terminology" title="Terminology">
        <t>The following terms are defined in <xref target="RFC6241"/> and are not redefined
        here:<list style="symbols">
            <t>client</t>

            <t>configuration data</t>

            <t>server</t>

            <t>state data</t>
          </list></t>

        <t>The following terms are defined in <xref target="RFC6020"/> and are not redefined
        here:<list style="symbols">
            <t>augment</t>

            <t>data model</t>

            <t>data node</t>
          </list></t>

        <t>The terminology for describing YANG data models is found in
        <xref target="RFC6020"/>.</t>
      </section>
	  
      <section anchor="tree-info" title="Tree diagram">
        <t>A simplified graphical representation of the data model is
        presented in <xref target="design"/>.</t>

		  
	&treesym;

      </section>
    </section>
	<section anchor="definitions" title="Definitions">
	<t>Customer Edge (CE) Device: The equipment on the customer side of the
   SP-customer boundary (the customer interface).</t>
	<t>Provider Edge (PE) Device: The equipment on the SP side of the
   SP-customer boundary (the customer interface).</t>
	<t>PE-Based VPNs: The PE devices know that certain traffic is VPN
   traffic.  They forward the traffic (through tunnels) based on the
   destination IP address of the packet, and optionally on based on
   other information in the IP header of the packet.  The PE devices are
	themselves the tunnel endpoints.  The tunnels may make use of various
   encapsulations to send traffic over the SP network (such as, but not
   restricted to, GRE, IP-in-IP, IPsec, or MPLS tunnels).</t>


	</section>
	<section anchor="service" title="Layer 3 IP VPN service model">
	<t>
	A Layer 3 IPVPN service is a collection of sites that are authorized to exchange traffic between each other over a shared IP infrastructure.
	This layer 3 VPN service model aims at providing a common understanding on how the corresponding IP VPN service is to be deployed over the shared infrastructure.
	This service model is limited to BGP PE-Based VPNs as described in <xref target="RFC4110"/> and <xref target="RFC4364"/>.
	</t>
	</section>
    
	<section anchor="howto" title="Service data model usage">
	<figure>
	<artwork>
                
	     L3VPN-SVC |         
	       MODEL   |
		           |
                +------------------+         +-----+
                |   Orchestration  | &lt; --- &gt; | OSS |
                +------------------+         +-----+
                   |            |
           +----------------+	|		
           | Config manager |   |
           +----------------+   |
                   |            |
				   | Netconf/CLI ...
                   |            |
     +------------------------------------------------+
                          Network
                        
						+++++++
                        + AAA +
                        +++++++				

+++++++  Bearer ++++++++             ++++++++       +++++++
+ CEA + ------- + PE A +             + PE B + ----- + CEB +
+++++++  Cnct   ++++++++             ++++++++       +++++++

Site A                                       Site B

	</artwork>
	</figure>
	<t>
	The idea of the L3 IPVPN service model is to propose an abstracted interface to manage configuration of components of a L3VPN service.
	A typical usage is to use this model as an input for an orchestration layer who will be responsible to translate it to orchestrated configuration of network elements
	who will be part of the service. The network elements can be routers, but also servers (like AAA), and not limited to these examples. 
	The configuration of network elements MAY be done by CLI, or by NetConf/RestConf coupled with specific configuration YANG data models (BGP, VRF, BFD ...) or any other way.
	</t>
	<t>
	The usage of this service model is not limited to this example, it can be used by any component of the management system but not directly by network elements.
	</t>
	</section>
	
	

	

	<section anchor="design" title="Design of the Data Model">
      <t>The YANG module is divided in two main containers : vpn-svc, sites.</t>
	  <t>The vpn-svc defines global parameters for the VPN service for a specific customer.</t>
	  <t>
	  A site is composed of a customer edge router (CE) attached to a provider edge router (PE). The attachment is done through a bearer with a connection (transport protocol) on top.	
	The bearer refers to physical properties of the attachment while the connection refers to more protocol oriented properties.
	</t>
	<t>Authorization of traffic exchange is done through what we call a VPN policy or VPN topology defining routing exchange rules between sites.</t>
      <t>The figure below describe the overall structure of the 
      YANG module:</t>

      <figure>
		&ietf-l3vpn-svc.tree;
      </figure>

      <section anchor="yang-vpn-global" title="VPN service overview">
	    <t>
		The vpn-svc top container contains generic information about the VPN service.
		The name of the vpn-svc refers to an internal reference for this VPN service,
		while customer name refers to a more explicit reference to the customer.
		An identifier (id) is also present for information systems and configuration that requires this information.
		This identifier is purely internal to the organization responsible for the VPN service.
		The vpn-svc name and id MUST be unique.
		</t>
		<section anchor="yang-vpn-global-topology" title="VPN service topology">
		<t>The type of topology of the VPN is required for configuration. Current proposal supports : any-to-any, hub and spoke (where hubs can exchange traffic), and hub and spoke disjoint (where hubs cannot exchange traffic).
		New topologies could be added by augmentation.
		</t>
			<section anchor="yang-vpn-global-topology-rt-allocation" title="Route Target allocation">
			<t>
			Layer 3 PE-based VPN is built using route-targets as described in <xref target="RFC4364"/>.
			It is expected management system to allocate automatically set of route-targets upon a VPN service creation request.
			How management system allocates route-targets is out of scope of the document but multiple ways could be envisaged as described below. 
			</t>
			<figure>
			<artwork>
                                 Management system
                  &lt;----------------------------------------------------&gt;
                                              Request RT			
                   +-----------------------+  Topo a2a   +-------------+
        RestConf   |                       |  -----&gt;     |             |
User ------------- | Service Orchestration |             | Network OSS |
        l3vpn-svc  |                       |  &lt;-----     |             |
          model    +-----------------------+   Response  +-------------+
		                                       RT1,RT2
			</artwork>
			<postamble>
			In the example above, a service orchestration, owning the instantiation of this service model,  
			request route-targets to the network OSS. Based on the requested VPN topology, the network OSS replies
			with one or multiple route-targets. The interface between this service orchestration and network OSS is out of scope of this document.
			</postamble>
			</figure>
			<figure>
			<artwork>
		
                   +---------------------------+ 
        RestConf   |                           |
User ------------- |   Service Orchestration   |
        l3vpn-svc  |                           |
		 model     |                           |
                   |  RT pool : 10:1-&gt;10:10000 |
                   |  RT pool : 20:50-&gt;20:5000 |
                   +---------------------------+
		                                    
			</artwork>
			<postamble>
			In the example above, a service orchestration, owning the instantiation of this service model,  
			owns one or more pools of route-target (filled by service provider) that can be allocated. Based on the requested VPN topology, it will allocate one or multiple route-targets from
			the pool.
			</postamble>
			</figure>
			<t>
			The mechanism displayed above are just examples and SHOULD NOT be considered as exhaustive list of solutions.
			</t>
			</section>
			<section anchor="yang-vpn-global-topology-a2a" title="Any to any">
			<figure>
			<artwork>
+------------------------------------------------------------+
|  VPN1_Site1 ------ PE1               PE2 ------ VPN1_Site2 |
|                                                            |
|  VPN1_Site3 ------ PE3               PE4 ------ VPN1_Site4 |
+------------------------------------------------------------+

            Figure - Any to any VPN topology
			</artwork>
			</figure>
			<t>
			In the any to any topology, all VPN sites can discuss between each other without any restriction. 
			It is expected that the management system that owns a any to any IPVPN service request through this model, 
			needs to assign and then configure the VRF and route-targets on the appropriate PEs.
			In case of any to any, in general a single route-target is required and every VRF imports and exports this route-target.
			</t>
			</section>
			<section anchor="yang-vpn-global-topology-hs" title="Hub and Spoke">
			<figure>
			<artwork>
+-------------------------------------------------------------+
|   Hub_Site1 ------ PE1               PE2 ------ Spoke_Site1 |
|                          +----------------------------------+   
|                          |                           
|                          +----------------------------------+                  
|   Hub_Site2 ------ PE3               PE4 ------ Spoke_Site2 |
+-------------------------------------------------------------+

            Figure - Hub and Spoke VPN topology
			</artwork>
			</figure>
			<t>
			In the hub and spoke topology, all spoke sites can discuss only with Hub sites but not between each other. Hubs can discuss also between each other.
			It is expected that the management system that owns a any to any IPVPN service request through this model, 
			needs to assign and then configure the VRF and route-targets on the appropriate PEs.
			In case of hub and spoke, in general a two route-targets are required (one route-target for Hub routes, one route-target for spoke routes). 
			A Hub VRF, connecting Hub sites, will export Hub routes with Hub route-target, and will import Spoke routes through Spoke route-target. 
			It will also import the Hub route-target to permit Hub to Hub communication.
			A Spoke VRF, connecting Spoke sites, will export Spoke routes with Spoke route-target, and will import Hub routes through Hub route-target.
			</t>
			<t>
			The management system MUST take into account Hub and Spoke connections constraints. For example, if management system decides to mesh a spoke site and a hub site on the same PE, it needs to mesh connections in different VRFs as displayed in the figure below.
			</t>
			<figure>
			<artwork>
			
   Hub_Site ------- (VRF_Hub)  PE1
                              (VRF_Spoke)
                                /  |
Spoke_Site1 -------------------+   |
                                   |
Spoke_Site2 -----------------------+
			</artwork>
			</figure>
			</section>
			
			<section anchor="yang-vpn-global-topology-hsd" title="Hub and Spoke disjoint">
			<figure>
			<artwork>
+-------------------------------------------------------------+
|   Hub_Site1 ------ PE1               PE2 ------ Spoke_Site1 |
+--------------------------+  +-------------------------------+   
                           |  |
+--------------------------+  +-------------------------------+                  
|   Hub_Site2 ------ PE3               PE4 ------ Spoke_Site2 |
+-------------------------------------------------------------+

          Figure - Hub and Spoke disjoint VPN topology
			</artwork>
			</figure>
			<t>
			In the hub and spoke disjoint topology, all spoke sites can discuss only with Hub sites but not between each other. Hubs cannot discuss between each other.
			It is expected that the management system that owns a any to any IPVPN service request through this model, 
			needs to assign and then configure the VRF and route-targets on the appropriate PEs.
			In case of hub and spoke, in general a two route-targets are required (one route-target for Hub routes, one route-target for spoke routes). 
			A Hub VRF, connecting Hub sites, will export Hub routes with Hub route-target, and will import Spoke routes through Spoke route-target. 
			A Spoke VRF, connecting Spoke sites, will export Spoke routes with Spoke route-target, and will import Hub routes through Hub route-target.
			</t>
			<t>
			The management system MUST take into account Hub and Spoke connections constraints as in the previous case.
			</t>
			</section>
			
		</section>
		<section anchor="yang-vpn-global-cloud-access" title="Cloud access">
		<t>
		The proposed model provides cloud access configuration through the cloud-access container. 
		Internet access can typically be considered as cloud access service. The cloud-access container provides parameters for network address translation
		and authorization rules. 
		</t>
		<t>
		A cloud identifier is used to reference the target service. This identifier is local to each administration.
		</t>
		<t>
		If NAT is required to access to the cloud, the nat-enabled leaf MUST be set to true. A NAT address can be provided in customer-nat-address, in case the customer is
		providing the public IP address for the cloud access. If service provider is providing the NAT address, customer-nat-address MAY not be necessary as it can be picked 
		from a service provider pool.
		</t>
		<t>
		By default, all sites in the IPVPN MUST be authorized to access to the cloud. In case restrictions are required, a user MAY configure the authorized-sites and denied-sites list.
		The authorization-sites defines the list of sites authorized for cloud access. The denied-sites defines the list of sites denied for cloud access.
		The model supports both "deny all expect" and "accept all expect" authorization.
		</t>
		<t>The "deny all expect" behavior is obtained by filling only the authorized-sites. All the sites listed will be authorized, all others will be denied.</t>
		<t>The "accept all expect" behavior is obtained by filling only the denied-sites. All the sites listed will be denied, all others will be authorized.</t>
		<t>Defining both denied-sites and authorized-sites MUST be processed as "deny all expect", so the denied-sites will have not effect.</t>
		<t>
		How the restrictions will be configured on network elements is out of scope of this document and will be specific to each deployment.
		</t>
		<figure>
		<artwork>

                  IPVPN
    ++++++++++++++++++++++++++++++++     +++++++++++
	+             Site 3           + --- +  Cloud1 +
	+ Site 1                       +     +++++++++++
	+                              + 
	+ Site 2                       + --- ++++++++++++
	+                              +     + Internet +
	+            Site 4            +     ++++++++++++
	++++++++++++++++++++++++++++++++
                 |
		     ++++++++++
			 + Cloud2 +
			 ++++++++++

		</artwork>
		</figure>
		<t>
		In the example above, we may configure the global VPN to access Internet by creating a cloud-access pointing to the cloud identifier for Internet service.
		No authorized-sites will be configured as all sites are required to access to Internet. NAT-enabled will be set to true and a nat-address will be configured.
		<figure>
		<artwork>
&lt;vpn-svc&gt;
	&lt;name&gt;ZKITYHJ054687&lt;/name&gt;
	&lt;id&gt;12456487&lt;/id&gt;
	&lt;customer-name&gt;CUSTOMER_1&lt;/customer-name&gt;
	&lt;topology&gt;any-to-any&lt;/topology&gt;
	&lt;cloud-access&gt;
		&lt;cloud-identifier&gt;51&lt;/cloud-identifier&gt;
		&lt;nat-enabled&gt;true&lt;/nat-enabled&gt;
		&lt;nat-address&gt;1.1.1.1&lt;/nat-address&gt;
    &lt;/cloud-access&gt;
&lt;/vpn-svc&gt;
		</artwork>
		</figure>
		</t>
		<t>
		If Site1 and Site2 requires access to Cloud1, a new cloud-access will be created pointing to the cloud identifier of Cloud1. Authorized sites will be filled with
		reference to Site1 and Site2.
		<figure>
		<artwork>
&lt;vpn-svc&gt;
	&lt;name&gt;ZKITYHJ054687&lt;/name&gt;
	&lt;id&gt;12456487&lt;/id&gt;
	&lt;customer-name&gt;CUSTOMER_1&lt;/customer-name&gt;
	&lt;topology&gt;any-to-any&lt;/topology&gt;
	&lt;cloud-access&gt;
		&lt;cloud-identifier&gt;1111111&lt;/cloud-identifier&gt;
		&lt;authorized-sites&gt;
			&lt;site-id&gt;site1&lt;/site-id&gt;
			&lt;site-id&gt;site2&lt;/site-id&gt;
		&lt;/authorized-sites&gt;
	&lt;/cloud-access&gt;
&lt;/vpn-svc&gt;
		</artwork>
		</figure>
		</t>
		<t>
		If all sites except Site1 requires access to Cloud2, a new cloud-access will be created pointing to the cloud identifier of Cloud2.  denied-sites will be filled with
		reference to Site1.
		<figure>
		<artwork>
&lt;vpn-svc&gt;
	&lt;name&gt;ZKITYHJ054687&lt;/name&gt;
	&lt;id&gt;12456487&lt;/id&gt;
	&lt;customer-name&gt;CUSTOMER_1&lt;/customer-name&gt;
	&lt;topology&gt;any-to-any&lt;/topology&gt;
	&lt;cloud-access&gt;
		&lt;cloud-identifier&gt;22222222&lt;/cloud-identifier&gt;
		&lt;denied-sites&gt;
			&lt;site-id&gt;site1&lt;/site-id&gt;
		&lt;/denied-sites&gt;
	&lt;/cloud-access&gt;
&lt;/vpn-svc&gt;
		</artwork>
		</figure>
		</t>
		</section>
		<section anchor="yang-vpn-global-mcast" title="Multicast service">
		<t>Multicast in IP VPN is described in <xref target="RFC6513"/>.</t>
		<t>If IPVPN supports multicast service, it is expected to provide inputs on global multicast parameters.</t>
		<t>The user of this model will need to fill the flavor of trees that will be used by customer within the IPVPN (Customer tree).
		The proposed model supports ASM, SSM and BiDirectional trees (and can be augmented). Multiple flavors of tree can be supported simultaneously.
		</t>
		<figure>
		<artwork>
                       (SSM tree)
 Recv (IGMPv3) -- Site2 ------- PE2
                                           PE1 --- Site1 --- Source1
												         \
                                                          ---- Source2
												 
						(ASM tree)
 Recv (IGMPv2) -- Site3 ------- PE3
 
                        (SSM tree)
 Recv (IGMPv3) -- Site4 ------- PE4
                                /
 Recv (IGMPv2) -- Site5 --------
                        (ASM tree)

		</artwork>
		</figure>
		
		<t>
		In case of ASM flavor, this model requires to fill the rp and rp-discovery parameters. The rp-discovery supports the auto-rp, static-rp, anycast-rp and bsr-rp modes.
		</t>
		</section>
	  </section>

	  <section anchor="yang-site" title="Site overview">
	    <t>
		The L3VPN service is really attached to the notion of sites.
		A site is composed of some characteristics :
		<list style="symbols">
		<t>Unique identifier (site-id) : to uniquely identify the site within the overall network infrastructure. The identifier is a string permitting to any encoding for the local administration of the VPN service.</t>
		<t>Location (location) : site location informations to permit easy retrieval on nearest available ressources.</t>
		<t>Site constraints (site-diversity) : site-diversity container permit to define some constraints for the setup of the site, for example : PE disjointness or PoP disjointness. A site-group identifier permit to manage the disjointness. Two sites with the same group and requiring PE disjointness cannot be connected on the same PE.</t>
		<t>Site availability (site-availability) : permit to define the availability service type (single, loadsharing, primary/backup scenarios) and also the access-type within the service (single, primary, backup ...).</t>
		<t>Native VPN (native-vpn) and site-type : reference the vpn-svc, the site is belonging to. The site-type defines the role of the site within the native VPN topology (e.g. Hub, Spoke ...).</t>
		<t>Management (management) : defines the model of management of the site, for example : comanaged, customer managed or provider managed.</t>
		<t>Attachment (attachment) : defines parameters of the attachment of the site, especially bearer, connection and service parameters.</t>
		</list>
		</t>
		<t>
		The site configuration is viewed as a global entity, we assume that it is mostly the role of the management to split the parameters between the different elements within the network.
		For example, in the case of the attachment configuration, the management system needs to split the overall parameters between PE configuration and CE configuration.
		</t>
		<section anchor="site-location-prov" title="Deciding where to connect the site">
		<t>
		The management system will have to decide where to connect the site in the provider network (PE, aggregation switch ...).
		This decision MAY be based on any constraint that are up to the service provider : least load, distance ...
		The current model proposes some parameters that will help the management system to decide where to attach the customer site.
		
		</t>
			<section anchor="site-location" title="Site location">
			<t>
			The location information provided in this model MAY be used by a management system to decide the target PE to mesh the site. 
			<figure>
			<artwork>
									 PoP#1 (New York)
								  +---------+        
								  |   PE1   |
			 Site #1 ---...       |   PE2   |
			(Atlantic City)       |   PE3   |
								  +---------+

									 PoP#2 (Washington)
								  +---------+
								  |   PE4   |
								  |   PE5   |
								  |   PE6   |
								  +---------+

									 PoP#3 (Philadelphia)
								  +---------+
								  |   PE7   |
			 Site #2 ---...       |   PE2   |
			(Reston)              |   PE9   |
								  +---------+								  
		
			</artwork>
			</figure>
			In the example below, the management system may decide to mesh Site #1 on a PE from Philadelphia PoP for distance reason. 
			It may also take in account resources available on PEs to decide the exact target PE (least load).
			In case of shortest distance PE used, it may also decide to mesh Site #2 on Washington PoP.
			</t>
			</section>
			
			
			<section anchor="site-availability" title="Site availability">
			<t>
			The site availability defines parameters for the site redundancy. The YANG model proposes three models of redundancy (service-type) that MAY be extended by augmentation :
			<list style="symbols">
			<t>single : single homing scenario, no attachment redundancy required.</t>
			<t>primary-backup : dual homing scenario, one attachment is primary, when the attachment goes down, traffic goes to the backup attachment.</t>
			<t>loadsharing : multihoming scenario, both attachment are used at the same time. How loadsharing is done is not part of service-type.</t>
			</list>
			The site availability also defines access-type which defines the role of the site in the availability system. The YANG model proposes four models of access-type :
			<list style="symbols">
			<t>single-access : used to indicate the single access function. Used for single-homed sites and coupled with "single" service-type.</t>
			<t>primary-access : used to indicate the primary access in a primary-backup service-type.</t>
			<t>backup-access : used to indicate the backup access in a primary-backup service-type.</t>
			<t>loadsharing-access : used to indicate any access in a loadsharing service-type.</t>
			</list>
			</t>
			<t>The figure below describes how site availability attributes can be used.</t>
			<figure>
			<artwork>

Hub#1 LAN		                                 Hub#2 LAN
  |      primary-backup           loadsharing        |
  |      primary-access           loadsharing-access |
  |--- CE1 ------- PE1         PE3 --------- CE3 --- |
  |                                                  |
  |                                                  |
  |--- CE2 ------- PE2         PE4 --------- CE4 --- |
  |       primary-backup           loadsharing       |
          backup-access            loadsharing-access
		  
                          PE5
                           | single
                           | single-access
                           |
                          CE5
						   |
                      Spoke#1 site
			</artwork>
			</figure>
			<t>In case of loadsharing, the YANG model proposes to define the loadsharing policy using loadsharing-type. The model proposes the following types that could be augmented.
			These option MAY be used on any remote sites (single, primary-backup ...) facing a loadsharing site.
			<list style="symbols">
			<t>loadsharing-ibgp : loadbalancing will be done between multiple received iBGP paths.</t>
			<t>loadsharing-eibgp : loadbalancing will be done between multiple received iBGP paths or eBGP paths : typical application is when a remote site is connected on the same PE than the hub requiring loadsharing.</t>
			</list>
			</t>
			<t>Considering the diagram above, to enable loadsharing for Hub#2 sites, 
			Hub#1 sites and Spoke#1 site can be configured with loadsharing-ibgp as loadsharing-type.
			If a Spoke#2 site was connected also on PE4, Spoke#2 site may be configured with loadsharing-eibgp as loadsharing-type.
			</t>
			<figure>
			<artwork>

		                    Hub#2 LAN
           loadsharing        |
           loadsharing-access |
        PE3 --------- CE3 --- |
                              |
                              |
        PE4 --------- CE4 --- |
        |   loadsharing       |
        |   loadsharing-access
        |
        | single
		| single-access
		| loadsharing-eibgp
        |
		CE6
		|
	Spoke#2 site
		  </artwork>
		  </figure>
			<t>
			The site availability will have an impact on site meshing location, as dual homing may require meshing at least on different network elements (see next section).
			</t>
			</section>
			
			<section anchor="site-constraint" title="Site diversity">
			<t>
			The site diversity defines what is the acceptable fate sharing level in case multiple sites for a single VPN must be provisioned in a common location.
			The site diversity introduces the notion of site-group. Sites belonging to the same site-group cannot share the same fate.
			We propose to introduce two constraints :
			<list>
			<t>PoP diverse : site belonging to the same site-group MUST be provisioned on different PoPs.</t>
			<t>PE diverse : site belonging to the same site-group MUST be provisioned on different PE routers.</t>
			</list>
			</t>
			<t>
			How these diversity constraints are applied is out of scope of the document. As an example, the management system receiving the request for diversity, MAY exchange information with some OSS components to define the best target PEs based on location and ressource availability.
			</t>
			<t>
			Consider a dual homed hub site, it is desirable for redundancy to provision the two VPN access connections on two different PEs or two different PoPs.
			<figure>
			<artwork>
									 PoP#1
								  +---------+
								  |   PE1   |
	Hub_Site_primary ------       |   PE2   |
								  |   PE3   |
								  +---------+

									 PoP#2
								  +---------+
								  |   PE4   |
	Hub_Site_backup -------       |   PE5   |
								  |   PE6   |
								  +---------+	
		
			</artwork>
			</figure>
			In a PoP diverse scenario, the management system may decide to mesh Hub_Site_primary on any PE of PoP#1 and Hub_Site_backup on any PE of PoP#2.
			In a PE diverse scenario, if the management system decides to mesh Hub_Site_primary on PE1, it is require to mesh Hub_Site_backup on any PE different from PE1.
			</t>
			<t>
			Site diversity is not limited to multihoming scenarios. If a company has multiple small branch offices (single homed) that requires to be connected in the same location, it is desirable to dispatch the attachment on multiple PEs. 
			So in case of PE crash, only some offices will be impacted.
			
			<figure>
			<artwork>
									 PoP#1
								  +---------+
								  |   PE1   |
	        Office#1 ---...       |   PE2   |
	        Office#2 ---...       |   PE3   |
	        Office#3 ---...       |   PE4   |
	        Office#...--...       +---------+
	        Office#100--...       
	               
			</artwork>
			</figure>
			In the figure above, it may be good to mesh 25 offices on each PE of PoP#1 to prevent concentration of two many customer offices on common network elements.
			</t>
			

			</section>
			<section anchor="site-rd-allocation" title="Route Distinguisher and VRF allocation">
			<t>
			Route distinguisher is also a critical parameter of PE-based L3VPN as described in <xref target="RFC4364"/> that will permit to distinguish common addressing plans in different VPNs.
			As for Route-targets, it is expected management system to allocate a VRF on the target PE and a route-distinguisher for this VRF.
			</t>
			<t>
			If a VRF exists on the target PE, and the VRF fulfils the connectivity constraints for the site, there is no need to recreate another VRF and the site
			MAY be meshed within this existing VRF. How the management system checks that an existing VRF fulfils the connectivity constraints for a site is out of scope of this document.
			</t>
			<t>
			If no VRF exists on the target PE, filling the site constraints, the management system will have to initiate a new VRF creation on the target PE and will have to allocate a new route distinguisher
			for this new VRF.
			</t>
			<t>
			The management system MAY apply a per-VPN or per-VRF allocation policy for the route-distinguisher depending of the service provider policy. In a per-VPN allocation policy, all VRFs (dispatched on multiple PEs) within a VPN will share the same route distinguisher value.
			In a per-VRF model, all VRFs will always have a unique route-distinguisher value.
			Some other allocation policies are also possible, and this document does not restrict the allocation policies to be used.
			</t>
			<t>
			Allocation of route-distinguisher MAY be done in the same way as the route-targets. The example provided in <xref target="yang-vpn-global-topology-rt-allocation"/> could be reused.
			</t>
			<t>Note that a service provider MAY decide to configure target PE for automated allocation of route distinguisher. In this case, there will be no need for any backend system to allocate a route-distinguisher value.</t>
						
			</section>
			
			
			
		
		</section>
		<section anchor="site-vpn-policy" title="VPN policy">
		<t>
		The VPN policy defines the route exchange between multiple VPNs. A vpn-policy configuration is not required if there is no inter VPN relations. 
		Indeed the VPN policy already exists from the topology of the VPN, and the management system using this service model MUST derive the VRF configuration from the VPN topology.
		The vpn-policy container only defines relations with VPNs that are not the native vpn. In case, a vpn-policy is defined, the management system will built the route-target policy configuration from a combination of 
		both the vpn-policy and the vpn-topology.
		</t>
		<figure>
		<artwork>
+--------------------------------------------------------------+
|  VPN1_Site1 ------ PE1               PE2 ------ VPN1_Site2   |
+--------------------------------------------------------------+

+--------------------------------------------------------------+
|  VPN2_Site1 ------ PE3               PE4 ------ VPN2_Site2   |
+----------------------------------+                           |	
                                   |                           |
+------------------------------------------------------------+ |
|  VPN3_Site1 ------ PE5           |   PE6 ------ VPN3_Site2 | |
+------------------------------------------------------------+ |
                                   |                           |
                                   +---------------------------+
		</artwork> 
		</figure>
		<t>
		Let us consider two existing vpn service VPN1 and VPN2 with a any-to-any topology. When the vpn services are provisioned a route-target value will be affected by the OSS of the service provider for these VPNs. 
		Let's call RT1 the route-target of VPN1,and RT2 the route-target of VPN2.
		Now we consider a new VPN service VPN3 (any to any) that must be provisioned, RT3 will be allocated by the OSS for proper configuration on network elements.
		</t>
		<t>
		Consider a site#1 in VPN3 that must communicate only in VPN3, in this case, there is no need to specify any vpn-policy for site#1, as site#1 will be provisioned using the native-vpn policy which is any-to-any in VPN3.
		VRF on PE5 for VPN3 will be so provisioned by the management system using RT3 value as import and export value.
		</t>
		<t>
		Consider a site#2 in VPN3 that must communicate in VPN3, and a specific LAN LAN1 must communicate with VPN2, in this case, we need to define for site#2 a vpn-policy that imports VPN2 and exports LAN1 to VPN2.
		VRF on PE6 for VPN3 will be so provisioned by the management system using RT3 value as import and RT3 as export value plus RT2 for LAN1 prefix.
		</t>
		</section>
		
		<section anchor="site-security" title="Security">
		<t>
		Security container defines customer specific security parameters for the site.
		This section will more be detailled in future revision.
		</t>
			<section anchor="site-security-encryption" title="Encryption">
			<t>
			Encryption can be requested on the connection. It may be performed at layer 2 or layer 3 by selecting the appropriate enumeration
			in "layer" leaf.
			The encryption profile can be a service provider defined template or customer specific.
			</t>
			</section>
		
		</section>
		<section anchor="site-management" title="Management">
		<t>The model proposes three types of common management options :
		<list style="symbols">
		<t>comanaged : the CE router is managed by the provider and also by the customer.</t>
		<t>provider-managed : the CE router is managed only by the provider.</t>
		<t>customer-managed : the CE router is managed only by the customer.</t>
		</list>
		</t>
		<t>Based on the management model, different security options MAY be derived.</t>
		<t>In case of "provider-managed" or "comanaged", the model proposes some option to define the management transport protocol (IPv4 or IPv6) and the associated
		management address.</t>
		</section>
		
		<section anchor="site-attachment" title="Attachment">
		<t>
		The attachment defines how the service is connected on the network and is splitted in three class of parameters :
		<list style="symbols">
		<t>bearer : defines physical parameters of the attachment.</t>
		<t>connection : defines protocol parameters of the attachment (transport layer and routing protocols).</t>
		</list>
		</t>
			<section anchor="site-attachment-bearer" title="Bearer">
			<t>TBD.</t>
			</section>
			<section anchor="site-attachment-conn" title="Connection">
			<t>The connection defines the protocol parameters of the attachment (IPv4 and IPv6) as well as routing.</t>
				<section anchor="site-attachment-conn-addressing" title="IP addressing">
				<t>IP subnet can be configured for either transport protocols. For a dual stack connection, two subnets will be provided, one for each
				transport layer.</t>
				<t>The address-allocation-type will help in defining how the address allocation MUST be done.
				The current model proposes three ways of IP address allocation :
				<list style="symbols">
				<t>pe-dhcp : the PE router will provide DHCP service for CE router, this is applicable to both IPv4 and IPv6 addressing.</t>
				<t>static-address : Addresses will be assigned manually on both sides, this is applicable to both IPv4 and IPv6 addressing.</t>
				<t>slaac : enables stateless address autoconfiguration (<xref target="RFC4862"/>). This is applicable only for IPv6.</t>
				</list>
				</t>
				</section>
				
				<section anchor="site-attachment-conn-routing" title="Routing protocols">
				<t>Routing-protocol defines which routing protocol must be activated between the provider edge and the customer. The current model support : bgp, rip, rip-ng, ospf, static, direct, vrrp.</t>
				<figure>
				<artwork>
				            Rtg protocol
	192.0.2.0/24 ----- CE ----------------- PE1
				</artwork>
				</figure>
				<t>If the CE is comanaged or provider managed, the management system will be required to configure the routing protocol on both side on the connnection.</t>
				<figure>
				<artwork>
				
                                  |  L3VPN SVC model
                                  |
                           +------------+
				           + Mgt system +
                           +------------+
                            /          \
                           /            \   Routing protocol config 
						  /              \    (CLI, Netconf ...)
				         /  Rtg protocol  \
	192.0.2.0/24 ----- CE ----------------- PE1
	
	   Routing protocol config - provider managed or comanaged CE
				</artwork>
				</figure>
				<t>If the CE is customer managed, the management system will be required to configure the routing protocol only the PE router.</t>
				<figure>
				<artwork>
				
                                  |  L3VPN SVC model
                                  |
                           +------------+
				           + Mgt system +
                           +------------+
                                       \
                                        \   Routing protocol config 
						                 \    (CLI, Netconf ...)
				            Rtg protocol  \
	192.0.2.0/24 ----- CE ----------------- PE1
	
	     Routing protocol config - customer managed CE
				</artwork>
				</figure>
					<section anchor="site-attachment-conn-dualstack" title="Dual stack handling">
					<t>
					All routing protocol types support dual stack by using address-family leaf-list.
					</t>
					<figure>
					<artwork>
Example of Dual stack using the same routing protocol :

&lt;routing-protocol&gt;
	&lt;type&gt;static&lt;/type&gt;
	&lt;static&gt;
		&lt;address-family&gt;ipv4-unicast&lt;/address-family&gt;
		&lt;address-family&gt;ipv6-unicast&lt;/address-family&gt;
	&lt;/static&gt;
&lt;/routing-protocol&gt;
					</artwork>
					</figure>
					<figure>
					<artwork>
Example of Dual stack using two different routing protocols :

&lt;routing-protocol&gt;
	&lt;type&gt;rip&lt;/type&gt;
	&lt;rip&gt;
		&lt;address-family&gt;ipv4-unicast&lt;/address-family&gt;
	&lt;/rip&gt;
&lt;/routing-protocol&gt;
&lt;routing-protocol&gt;
	&lt;type&gt;ospf&lt;/type&gt;
	&lt;ospf&gt;
		&lt;address-family&gt;ipv6-unicast&lt;/address-family&gt;
	&lt;/ospf&gt;
&lt;/routing-protocol&gt;

					</artwork>
					</figure>
					</section>
					<section anchor="site-attachment-conn-routing-direct" title="Direct LAN connection onto SP network">
					<t>Routing-protocol "direct" SHOULD be used when a customer LAN is directly connected to the provider network and must be advertised in the IPVPN.</t>
					<figure>
					<artwork>
		LAN attached directly to provider network :

		192.0.2.0/24 ----- PE1
					</artwork>
					</figure>
					</section>
					
					<section anchor="site-attachment-conn-routing-direct-red" title="Direct LAN connection onto SP network with redundancy">
					<t>Routing-protocol "vrrp" SHOULD be used when a customer LAN is directly connected to the provider network and must be advertised in the IPVPN and LAN redundancy is expected.</t>
					<figure>
					<artwork>
		LAN attached directly to provider network with LAN redundancy:

		192.0.2.0/24 ------ PE1
					   |
					   +-- PE2
					</artwork>
					</figure>
					</section>
					
					<section anchor="site-attachment-conn-routing-static" title="Static routing">
					<t>Routing-protocol "static" MAY be used when a customer LAN is connected to the provider network through a CE router and must be advertised in the IPVPN.</t>
					<figure>
					<artwork>
                                Static rtg
		192.0.2.0/24 ------ CE -------------- PE
		                    |                |
			                |         Static route 192.0.2.0/24 nh CE
			Static route 0.0.0.0/0 nh PE
					</artwork>
					</figure>
					</section>
					<section anchor="site-attachment-conn-routing-rip" title="RIP routing">
					<t>Routing-protocol "rip"  MAY be used when a customer LAN is connected to the provider network through a CE router and must be advertised in the IPVPN.</t>
					<t>In case of dual stack, the management system will be responsible to configure rip (including right version number) and rip-ng instances on network elements.</t>
					<figure>
					<artwork>
                                RIP rtg
		192.0.2.0/24 ------ CE -------------- PE

					</artwork>
					</figure>
					</section>
					<section anchor="site-attachment-conn-routing-ospf" title="OSPF routing">
					<t>Routing-protocol "ospf"  MAY be used when a customer LAN is connected to the provider network through a CE router and must be advertised in the IPVPN.</t>
					<t>It can be used to extend an existing OSPF network and interconnect different areas. See <xref target="RFC4577"/> for more details.</t>
					<figure>
					<artwork>
                          +---------------------+
                          |                     |
                  OSPF    |                     | OSPF 
                  area 1  |                     | area 2
 (OSPF                    |                     |            (OSPF
 area 1) --- CE ---------- PE               PE ------- CE --- area 2)
                          |                     |
                          +---------------------+
 
					</artwork>
					</figure>
					<t>The model also proposes an option to create an OSPF sham-link between two sites sharing the same area and having a backdoor link.
					The sham-link is created by referencing the target site sharing the same OSPF area. The management system will be responsible
					to check if there is already a shamlink configured for this VPN and area between the same pair of PEs. If there is no existing shamlink,
					the management system will provision it, this shamlink MAY be reused by other sites.</t>
					<figure>
					<artwork>
                        +------------------------+
                        |                        |
                        |                        |
                        |   PE (--shamlink--)PE  |
                        |    |                |  |
                        +----|----------------|--+
						     | OSPF area1     | OSPF area 1
							 |                |
							 CE1             CE2
							 |                |
						(OSPF area1)       (OSPF area1)
						     |                |
							 +----------------+
					</artwork>
					</figure>
					<t>
					Regarding Dual stack support, user MAY decide to fill both IPv4 and IPv6 address families, if both protocols SHOULD 
					be routed through OSPF. As OSPF is using two different protocol for IPv4 and IPv6, the management system will need to configure
					both ospf version 2 and version 3 on the PE-CE link.
					</t>
					<t>Example of OSPF routing parameters in service model.</t>
					<figure>
					<artwork>
&lt;routing-protocol&gt;
	&lt;type&gt;ospf&lt;/type&gt;
	&lt;ospf&gt;
		&lt;area-address&gt;1.1.1.1&lt;/area-address&gt;
		&lt;address-family&gt;ipv4-unicast&lt;/address-family&gt;
		&lt;address-family&gt;ipv6-unicast&lt;/address-family&gt;
	&lt;/ospf&gt;
&lt;/routing-protocol&gt;
					</artwork>
					</figure>
					
					<figure>
					<artwork>
Example of PE configuration done by management system :

router ospf 10
 area 0.0.0.0
  interface Ethernet0/0
!
router ospfv3 10
 area 0.0.0.0
  interface Ethernet0/0
 !
					</artwork>
					</figure>
					</section>
					<section anchor="site-attachment-conn-routing-bgp" title="BGP routing">
					<t>Routing-protocol "bgp" MAY be used when a customer LAN is connected to the provider network through a CE router and must be advertised in the IPVPN.</t>
					<figure>
					<artwork>
                                BGP rtg
		10.0.0.0/24 ------ CE -------------- PE

					</artwork>
					</figure>
					<t>The AS numbers, peerings addressing will be derived from connection parameters or customer-specific-information as well as internal knowledge of SP.</t>
					<t>In case of dual stack access, user MAY request BGP routing for both IPv4 and IPv6 by filling both address-families.
					It will be up to SP and management system to decide how to decline the configuration (two BGP sessions, single, multisession ...).</t>
					<t>The service configuration below actives BGP on PE-CE link for both IPv4 and IPv6.</t>
					<figure>
					<artwork>
&lt;routing-protocol&gt;
	&lt;type&gt;bgp&lt;/type&gt;
	&lt;bgp&gt;
		&lt;address-family&gt;ipv4-unicast&lt;/address-family&gt;
		&lt;address-family&gt;ipv6-unicast&lt;/address-family&gt;
	&lt;bgp&gt;
&lt;/routing-protocol&gt;
					</artwork>
					</figure>
					<t>
					This service configuration can be derived by management system into multiple flavors depending on SP flavor.
					</t>
					<figure>
					<artwork>
Example #1 of PE configuration done by management system 
(single session IPv4 transport):

router bgp 100
 neighbor 203.0.113.2 remote-as 65000
 address-family ipv4 vrf Cust1
	neighbor 203.0.113.2 activate
 address-family ipv6 vrf Cust1
	neighbor 203.0.113.2 activate
	neighbor 203.0.113.2 route-map SET-NH-IPV6 out
					</artwork>
					</figure>
					<figure>
					<artwork>
Example #2 of PE configuration done by management system (two sessions):

router bgp 100
 neighbor 203.0.113.2 remote-as 65000
 neighbor 2001::2 remote-as 65000
 address-family ipv4 vrf Cust1
	neighbor 203.0.113.2 activate
 address-family ipv6 vrf Cust1
	neighbor 2001::2 activate
					</artwork>
					</figure>
					<figure>
					<artwork>
Example #3 of PE configuration done by management system (multisession):

router bgp 100
 neighbor 203.0.113.2 remote-as 65000
 neighbor 203.0.113.2 multisession per-af
 address-family ipv4 vrf Cust1
	neighbor 203.0.113.2 activate
 address-family ipv6 vrf Cust1
	neighbor 203.0.113.2 activate
	neighbor 203.0.113.2 route-map SET-NH-IPV6 out
					</artwork>
					</figure>
					</section>
				</section>
			</section>
		</section>
		<section anchor="site-mpls" title="MPLS">
		<t>
		In case of Carrier Supporting Carrier (CsC), a customer MAY want to build MPLS service using an IPVPN as transport layer.
		</t>
		<figure>
		<artwork>
        LAN customer1
            |
            |
           CE1
            |
            | -------------
		 (vrf_cust1)
          CE1_ISP1
            |                 ISP1 PoP
            | MPLS link
            | -------------
			|
         (vrf ISP1)
           PE1
                     

          (...)               Provider backbone


           PE2
          (vrf ISP1)
            |
            | ------------
            |
            | MPLS link
            |                 ISP1 PoP
           CE2_ISP1
           (vrf_cust1)
            |-------------
            |
           CE2
            |
         Lan customer1			
 
		
		</artwork>
		</figure>
		<t>
		In the figure above, ISP1 resells IPVPN service but has no transport infrastructure between its PoPs. ISP1 uses an IPVPN as transport infrastructure (belonging to another provider) between its PoPs.
		The link between CE1_ISP1/PE1 and CE2_ISP1/PE2 MUST so be MPLS enabled.
		</t>
		<t>
		In the proposed model, LDP or BGP can be used as MPLS signalling protocol. In case of LDP, an IGP routing protocol MUST also be activated.
		In case of BGP signalling, BGP MUST also be configured as routing-protocol.
		</t>
		</section>
		<section anchor="site-service" title="Service">
		<t>
		The service defines service parameters associated with the site.
		</t>
			<section anchor="site-svc-qos" title="QoS">
			<t>
			The model proposes to define QoS parameters in an abstracted way :
			<list style="symbols">
			<t>qos-classification-policy : define a set of ordered rules to classify customer traffic.</t>
			<t>std-qos-profile : provider standard outgoing QoS profile to be applied. This is a reference to a well known profile in Service provider administration.
			</t>
			<t>custom-qos-profile : defines customer specific profiles.</t>
			</list>
			</t>
				<section anchor="site-svc-qos-classification" title="QoS classification">
				<t>
				QoS classification rules are handled by qos-classification-policy.
				The qos-classification-policy is an ordered list of rules that match a flow and set the appropriate target class of service (target-class-id).
				The match criterions provide a basic infrastructure for defining flows : layer 3 source and destination address, layer 4 ports, layer 4 protocol.
				</t>
				<t>Where the classification is done depends on the SP implementation of the service, but classification concerns the flow coming from the customer
				site and entering the network.</t>
				<figure>
				<artwork>
				               Provider network
						  +-----------------------+
   192.0.2.0/24
198.51.100.0/24 ---- CE --------- PE

  Traffic flow
 ----------&gt;
				
				</artwork>
				</figure>
				<t>
				In the figure above, the management system can decide :
				<list style="symbols">
				<t>if the CE is customer managed, to implement the classification rule in the ingress direction on the PE interface.</t>
				<t>if the CE is provider managed, to implement the classification rule in the ingress direction on the CE interface connected to customer LAN.</t>
				</list>
				</t>
				<t>The figure below describes a sample service description of qos-classification for a site  :</t> 
				<figure>
				<artwork>
&lt;service&gt;
	&lt;qos&gt;
		&lt;qos-classification-policy&gt;
			&lt;rules&gt;
				&lt;id&gt;1&lt;/id&gt;
				&lt;match&gt;
					&lt;ipv4-src-prefix&gt;192.0.2.0/24&lt;/ipv4-src-prefix&gt;
					&lt;ipv4-dst-prefix&gt;1.1.1.1/32&lt;/ipv4-dst-prefix&gt;
					&lt;l4-dst-port&gt;80&lt;/l4-dst-port&gt;
					&lt;l4-protocol&gt;tcp&lt;/l4-protocol&gt;
				&lt;/match&gt;
				&lt;target-class-id&gt;DATA2&lt;/target-class-id&gt;
			&lt;/rules&gt;
			&lt;rules&gt;
				&lt;id&gt;2&lt;/id&gt;
				&lt;match&gt;
					&lt;ipv4-src-prefix&gt;192.0.2.0/24&lt;/ipv4-src-prefix&gt;
					&lt;ipv4-dst-prefix&gt;1.1.1.1/32&lt;/ipv4-dst-prefix&gt;
					&lt;l4-dst-port&gt;21&lt;/l4-dst-port&gt;
					&lt;l4-protocol&gt;tcp&lt;/l4-protocol&gt;
				&lt;/match&gt;
				&lt;target-class-id&gt;DATA2&lt;/target-class-id&gt;
			&lt;/rules&gt;
			&lt;rules&gt;
				&lt;id&gt;3&lt;/id&gt;
				&lt;target-class-id&gt;DATA1&lt;/target-class-id&gt;
			&lt;/rules&gt;
		&lt;/qos-classification-policy&gt;
	&lt;/qos&gt;
&lt;/service&gt;
				</artwork>
				</figure>
				<t>
				In the example above :
					<list style="symbols">
					<t>HTTP traffic from 192.0.2.0/24 LAN destinated to 1.1.1.1/32 will be classified in DATA2.</t>
					<t>FTP traffic from 192.0.2.0/24 LAN destinated to 1.1.1.1/32 will be classified in DATA2.</t>
					<t>All other traffic will be classified in DATA1.</t>
					</list>
				</t>
				<t>
				The order of rules is really important. The management system responsible for translating those rules in network element configuration MUST keep 
				the same processing order in element configuration. The order of rule is defined by the "id" leaf. The lowest "id" MUST be processed first.
				</t>
				</section>
				<section anchor="site-svc-qos-profile" title="QoS profile">
				<t>std-qos-profile and custom-qos-profile define output QoS profiles to be used between PE and CE.</t>
				<figure>
				<artwork>
				               Provider network
						  +-----------------------+
192.0.2.0/24
198.51.100.0/24 ---- CE --------- PE
                        \       /
                       qos-profile
				
				</artwork>
				</figure>
				<t>
				std-qos-profile and custom-qos-profile cannot be used at the same time. If both are present, the management system SHOULD keep only the custom-qos-profile.
				</t>
				<t>
				A custom-qos-profile is defined as a list of class of services and associated properties. The properties are :
				<list style="symbols">
				<t>rate-limit : used to rate-limit the class of service. The value is expressed as a percentage of the global service bandwidth.</t>
				<t>priority-level : used to define priorities between class of services. The value of the priority to be used is dependant of each administration.
				The higher the priority-level is, the higher the priority of the class will be. Priority-level is used to define strict priority queueing. 
				A priority-level 250 class will be served before a priority-level 100 class until there is no more packet to process or until rate-limit does not allow anymore packets from the higher priority class.
				</t>
				<t>guaranteed-bw-percent : used to define a guaranteed amount of bandwidth for the class of service. It is expressed as a percentage.
				The guaranteed-bw-percent uses available bandwidth at the priority-level of the class.</t>
				</list>
				</t>
				<t>
				Example of service configuration using a standard qos profile :
				<figure>
				<artwork>
&lt;sites&gt;
	&lt;site-id&gt;1245HRTFGJGJ154654&lt;/site-id&gt;
	&lt;native-vpn&gt;VPN1&lt;/native-vpn&gt;
	&lt;site-type&gt;any-to-any-site&lt;/site-type&gt;
	&lt;service&gt;
		&lt;svc-input-bandwidth&gt;100000000&lt;/svc-input-bandwidth&gt;
		&lt;svc-output-bandwidth&gt;100000000&lt;/svc-output-bandwidth&gt;
		&lt;qos&gt;
			&lt;std-qos-profile&gt;PLATINUM&lt;/std-qos-profile&gt;
		&lt;/qos&gt;
	&lt;/service&gt;
&lt;/sites&gt;
&lt;sites&gt;
	&lt;site-id&gt;555555AAAA2344&lt;/site-id&gt;
	&lt;native-vpn&gt;VPN1&lt;/native-vpn&gt;
	&lt;site-type&gt;any-to-any-site&lt;/site-type&gt;
	&lt;service&gt;
		&lt;svc-input-bandwidth&gt;2000000&lt;/svc-input-bandwidth&gt;
		&lt;svc-output-bandwidth&gt;2000000&lt;/svc-output-bandwidth&gt;
		&lt;qos&gt;
			&lt;std-qos-profile&gt;GOLD&lt;/std-qos-profile&gt;
		&lt;/qos&gt;
	&lt;/service&gt;
&lt;/sites&gt;
				
				</artwork>
				</figure>
				</t>
				
				<t>
				Example of service configuration using a custom qos profile :
				<figure>
				<artwork>
&lt;sites&gt;
	&lt;site-id&gt;Site1&lt;/site-id&gt;
	&lt;native-vpn&gt;VPN1&lt;/native-vpn&gt;
	&lt;site-type&gt;any-to-any-site&lt;/site-type&gt;
	&lt;service&gt;
		&lt;svc-input-bandwidth&gt;100000000&lt;/svc-input-bandwidth&gt;
		&lt;svc-output-bandwidth&gt;100000000&lt;/svc-output-bandwidth&gt;
		&lt;qos&gt;
			&lt;custom-qos-profile&gt;
				&lt;class&gt;
					&lt;class-id&gt;REAL_TIME&lt;/class-id&gt;
					&lt;rate-limit&gt;10&lt;/rate-limit&gt;
					&lt;priority-level&gt;10&lt;/priority-level&gt;
				&lt;/class&gt;
				&lt;class&gt;
					&lt;class-id&gt;DATA&lt;/class-id&gt;
					&lt;priority-level&gt;5&lt;/priority-level&gt;
				&lt;/class&gt;
			&lt;/custom-qos-profile&gt;
		&lt;/qos&gt;
	&lt;/service&gt;
&lt;/sites&gt;
&lt;sites&gt;
	&lt;site-id&gt;Site2&lt;/site-id&gt;
	&lt;native-vpn&gt;VPN1&lt;/native-vpn&gt;
	&lt;site-type&gt;any-to-any-site&lt;/site-type&gt;
	&lt;service&gt;
		&lt;svc-input-bandwidth&gt;2000000&lt;/svc-input-bandwidth&gt;
		&lt;svc-output-bandwidth&gt;2000000&lt;/svc-output-bandwidth&gt;
		&lt;qos&gt;
			&lt;custom-qos-profile&gt;
				&lt;class&gt;
					&lt;class-id&gt;REAL_TIME&lt;/class-id&gt;
					&lt;rate-limit&gt;30&lt;/rate-limit&gt;
					&lt;priority-level&gt;10&lt;/priority-level&gt;
				&lt;/class&gt;
				&lt;class&gt;
					&lt;class-id&gt;DATA1&lt;/class-id&gt;
					&lt;priority-level&gt;5&lt;/priority-level&gt;
					&lt;guaranteed-bw-percent&gt;80&lt;/guaranteed-bw-percent&gt;
				&lt;/class&gt;
				&lt;class&gt;
					&lt;class-id&gt;DATA2&lt;/class-id&gt;
					&lt;priority-level&gt;5&lt;/priority-level&gt;
					&lt;guaranteed-bw-percent&gt;20&lt;/guaranteed-bw-percent&gt;
				&lt;/class&gt;
			&lt;/custom-qos-profile&gt;
		&lt;/qos&gt;
	&lt;/service&gt;
&lt;/sites&gt;
				
				</artwork>
				</figure>
				</t>
				<t>
				The custom-qos-profile for site1 defines that traffic from REAL_TIME class will have a higher priority than traffic from DATA class.
				The REAL_TIME traffic will be rate-limit to 10% of the service bandwidth (10% of 100Mbps = 10Mbps) to let some place for DATA traffic.
				</t>
				<t>
				The custom-qos-profile for site2 defines that traffic from REAL_TIME class will have a higher priority than traffic from data traffic.
				Data traffic will be splitted in two class of service DATA1 and DATA2 that will share bandwidth between them according to the percentage of guaranteed-bw-percent.
				The maximum of percentage to be used is not limited by this model but MUST be limited by the management system according to the policies authorized by the service provider.
				The REAL_TIME traffic will be rate-limit to 30% of the service bandwidth (30% of 100Mbps = 30Mbps) to let some place for data traffic.
				In case of congestion of the access, the REAL_TIME traffic can go up to 30Mbps (Let's assume that 20Mbps only are consumed). 
				The DATA1 and DATA2 will share remaining bandwidth (80Mbps) according to their percentage. So DATA1 will be served with at least 64Mbps of bandwidth.
				</t>
				</section>
			
			</section>
			
			<section anchor="site-svc-multicast" title="Multicast">
			<t>
			The multicast section defines the type of site in the customer multicast topology : source, receiver, or both.
			These parameters will help management system to optimize the multicast service.
			</t>
			</section>
			
			<section anchor="site-svc-frr" title="Traffic protection">
			<t>
			The service model supports the ability to protect traffic from or to a site.
			</t>
			<figure>
			<artwork>
			
		
		
	Site#1                            Site#2
CE1 ----- PE1 -- P1            P3 -- PE3 ---- CE3
 |                              |             |
 |                              |             |
CE2 ----- PE2 -- P2            P4 -- PE4 ---- CE4 
          /
         /
CE5 ----+
   Site#3
			</artwork>
			</figure>
			
			<t>
			In the figure above, we consider an IPVPN service with three sites including two dual homed sites (site#1 and #2). 
			For dual homed sites, we consider PE1-CE1 and PE3-CE3 as primary, and PE2-CE2,PE4-CE4 as backup for the example (even if protection also applies to loadsharing scenarios.)
			</t>
			<t>
			In order to protect Site#2 for a PE-CE link failure, a service provider MAY configure link-local-protection on the primary access of site#2 (PE3-CE3).
			In such case, if we consider traffic coming from a remote site (site#1 or site#3), primary path is to use PE3 as egress PE. 
			PE3 has preprogrammed a backup forwarding entry pointing to backup path (through PE4-CE4) for all prefixes going through PE3-CE3 link.
			How backup path is computed is out of scope of the document.
			When PE3-CE3 link fails, traffic is still received by PE3 but PE3 switch automatically traffic to the backup entry, path will so be PE1-P1-(...)-P3-PE3-PE4-CE4 until remote PEs reconverge and use PE4 as egress PE.
			</t>
			<t>
			In order to protect Site#2 for a egress PE node failure, a service provider may configure node-local-protection on the primary access of site#2 (PE3-CE3).
			This protection flavor is so called egress PE node protection.
			In such case, if we consider traffic coming from a remote site (site#1 or site#3), primary path is to use PE3 as egress PE. 
			P3 has preprogrammed a backup forwarding entry pointing to backup path. How backup path is computed is out of scope of the document.
			When PE3 node fails, traffic is still received by P3 but P3 switch automatically traffic to the backup entry, path will so be PE1-P1-(...)-P3-P4-PE4-CE4 until remote PEs reconverge and use PE4 as egress PE.
			</t>
			<t>
			In order to protect Site#2 for a egress PE node failure, another flavor of protection can be used, a service provider MAY configure node-global-protection on all remote sites.
			This protection flavor is generally called PIC Edge (Prefix Independent Convergence for Edge).
			In such case, if we consider traffic coming from a remote site (site#1 or site#3), primary path is to use PE3 as egress PE. 
			All remote PEs (PE1,PE2) have preprogrammed a backup forwarding entry pointing to backup path (through PE4). How backup path is computed is out of scope of the document.
			When PE3 node fails, remote PEs detect through IGP convergence that PE3 is no more reachable and decide to switch automatically traffic to the backup entry, path will so be PE1-P1-(...)-P4-PE4-CE4. In this case,
			as BGP convergence is involved, there is no other need of reconvergence.
			</t>
			</section>
		</section>
		<section anchor="site-customer" title="Customer specific information">
		<t>
		Customer specific informations are used to store informations owned by customers.
		The customer may have some LANs directly connected to CE routers managed by Service providers. 
		In this case, customer needs to allocate IP addresses from its LAN addressing plan for the CE router. This is the purpose of the customer-lan-connection list which provides information about addresses allocated from each customer LAN connected to the CE router.
		</t>
		<t>
		In case, provider needs to route some LAN that are cascaded behind those connected LANs, cascaded-lan-prefixes can be used.
		In this version of the document, static routing is assumed between CE and customer LANs.
		</t>
			<section anchor="site-customer-cascaded-lans" title="Customer cascaded LANs with provider managed CE">
			<figure>
			<artwork>

   192.0.2.0/24 ---- CustFW1 ---- 203.0.113.0/24 --- CE1 ----- PE1
					/
198.51.100.0/24 ----

			</artwork>
			</figure>
			<t>
			In the example above, CE1 owned by service provider is attached to
   203.0.113.0/24 LAN of the customer.  Customer allocated 192.0.2.254
   for CE1, this information will have to be reported as a customer-lan-
   connection in the service model.  Customer also have two LANs
   cascaded behind a firewall (192.0.2.0/24 and 198.51.100.0/24), those
   LANs MUST be routed within the IPVPN.  cascaded-lan-prefixes MUST be
   used to fill those informations.  The IP address of the firewall MUST
   be filled as nexthop of those LANs.
			</t>
			</section>
			<section anchor="site-customer-lans2" title="Customer LANs with provider managed CE">
			<figure>
			<artwork>

 192.0.2.0/24 ----  CE1 ----- PE1
					/
198.51.100.0/24 ----
			</artwork>
			</figure>
			<t>
			In the example above, CE1 owned by service provider is attached to 203.0.113.0/24 LAN of the customer.
			Customer allocated 192.0.2.254
   and 198.51.100.254 for CE1, this information will have to be reported as a customer-lan-connection in the service model.
			</t>
			</section>
			<section anchor="site-customer-non-managed" title="Customer LANs with customer managed CE">
			<figure>
			<artwork>

192.0.2.0/24 ----  CE1 ----- PE1
					/
198.51.100.0/24 ----
			</artwork>
			</figure>
			<t>
   In the example above, CE1 owned by customer is attached to
   203.0.113.0/24 LAN.  The service provider only have to deal with
   routing with customer CE, the routing-protocol information on the
   connection will define this.
			</t>
			</section>
		
		</section>
      </section>
	  <section anchor="template" title="Using configuration templates">
	  <t>
	  The proposed model supports the creation and application of configuration templates for sites.
	  </t>
	  <t>
	  A template can be configured by creating a new site with the template leaf equal to true. This means that
	  the site is not a real site and its just a configuration template.
	  </t>
	  <t>
	  Multiple template sites can be configured. Templates can be applied at multiple levels referenced by apply-template leaf.
	  The apply-template references the site-id of the template to be called. The location of the apply-template within the sites hierarchy defines
	  which parameters must be inherited. For example, if apply-template is done on service container of a site, only service container parameters (and childs) from the template 
	  will be applied. 
	  </t>
	  <t>Apply-template cannot be used within a template.</t>
	  <figure>
	  <artwork>
&lt;sites&gt;
 &lt;site-id&gt;Template-VoiceCoS-Cust1&lt;/site-id&gt;
  &lt;template&gt;true&lt;/template&gt;
  &lt;service&gt;
   &lt;qos&gt;
    &lt;custom-qos-profile&gt;
	 &lt;class&gt;
      &lt;class-id&gt;REAL_TIME&lt;/class-id&gt;
      &lt;rate-limit&gt;30&lt;/rate-limit&gt;
      &lt;priority-level&gt;10&lt;/priority-level&gt;
     &lt;/class&gt;
     &lt;class&gt;
      &lt;class-id&gt;DATA1&lt;/class-id&gt;
      &lt;priority-level&gt;5&lt;/priority-level&gt;
      &lt;guaranteed-bw-percent&gt;80&lt;/guaranteed-bw-percent&gt;
     &lt;/class&gt;
     &lt;class&gt;
      &lt;class-id&gt;DATA2&lt;/class-id&gt;
      &lt;priority-level&gt;5&lt;/priority-level&gt;
      &lt;guaranteed-bw-percent&gt;20&lt;/guaranteed-bw-percent&gt;
     &lt;/class&gt;
   &lt;/custom-qos-profile&gt;
  &lt;/qos&gt;
 &lt;/service&gt;
&lt;/sites&gt;


&lt;sites&gt;
	&lt;site-id&gt;Template-VPNsite-Customer1&lt;/site-id&gt;
	&lt;native-vpn&gt;VPN1&lt;/native-vpn&gt;
	&lt;site-type&gt;any-to-any-site&lt;/site-type&gt;
	&lt;template&gt;true&lt;/template&gt;
	&lt;service&gt;
		&lt;qos&gt;
			&lt;std-qos-profile&gt;PLATINUM&lt;/std-qos-profile&gt;
		&lt;/qos&gt;
	&lt;/service&gt;
	&lt;attachment&gt;
		&lt;connection&gt;
			&lt;routing-protocol&gt;
				&lt;name&gt;static&lt;/name&gt;
				&lt;type&gt;static&lt;/type&gt;
			&lt;/routing-protocol&gt;
		&lt;/connection&gt;
	&lt;/attachment&gt;
	&lt;vpn-policy&gt;
		&lt;import-policy&gt;
			&lt;vpn&gt;Service_VPN1&lt;/vpn&gt;
		&lt;/import-policy&gt;
		&lt;export-policy&gt;
			&lt;entries&gt;
				&lt;lan-tag&gt;VOICE&lt;/lan-tag&gt;
				&lt;vpn&gt;Service_VPN1&lt;/vpn&gt;
			&lt;/entries&gt;
		&lt;/export-policy&gt;
	&lt;/vpn-policy&gt;
&lt;/sites&gt;
	  </artwork>
	  </figure>
	  <t>
	  Template sites permit to define configuration blocks that will be inherited by one or multiple sites in order to speed up configuration. 
	  For example, if all the sites of an IPVPN service have the almost same configuration (routing-protocol, qos, management ...), 
	  a template can be created and each site of the VPN will reference the template. If a site has some particular parameters, specific parameters within the site
	  MUST always override parameters derived from template.
	  </t>
	  <t>
	  The example above defines two site templates :
	  <list style="symbols">
	  <t>Template-VPNsite-Customer1 that will be used to configure all the VPN sites for customer 1.</t>
	  <t>Template-VoiceCoS-Cust1 that will be used to configure some special CoS policy on some specific accesses of the VPN.</t>
	  </list>
	  In the example below, all sites of VPN1 are inheriting basic configuration from template Template-VPNsite-Customer1. 
	  Some
   specific parameters like svc-input-bandwidth are also defined for
   each site.  For Site 4 and 5 , specific QoS parameters are required,
   a new template Template-VoiceCoS-Cust1 is applied at service level
   for these two sites, overriding the service parameters from the
   Template-VPNsite-Customer1 template.
	  </t>
	  <figure>
	  <artwork>
&lt;sites&gt;
	&lt;site-id&gt;Site1&lt;/site-id&gt;
	&lt;apply-template&gt;Template-VPNsite-Customer1&lt;/apply-template&gt;
	&lt;service&gt;
		&lt;svc-input-bandwidth&gt;5000000&lt;/svc-input-bandwidth&gt;
		&lt;svc-output-bandwidth&gt;5000000&lt;/svc-output-bandwidth&gt;
	&lt;/service&gt;
&lt;/sites&gt;
&lt;sites&gt;
	&lt;site-id&gt;Site2&lt;/site-id&gt;
	&lt;apply-template&gt;Template-VPNsite-Customer1&lt;/apply-template&gt;
		&lt;service&gt;
		&lt;svc-input-bandwidth&gt;20000000&lt;/svc-input-bandwidth&gt;
		&lt;svc-output-bandwidth&gt;20000000&lt;/svc-output-bandwidth&gt;
	&lt;/service&gt;
&lt;/sites&gt;
&lt;sites&gt;
	&lt;site-id&gt;Site3&lt;/site-id&gt;
	&lt;apply-template&gt;Template-VPNsite-Customer1&lt;/apply-template&gt;
	&lt;service&gt;
		&lt;svc-input-bandwidth&gt;30000000&lt;/svc-input-bandwidth&gt;
		&lt;svc-output-bandwidth&gt;30000000&lt;/svc-output-bandwidth&gt;
	&lt;/service&gt;
&lt;/sites&gt;


&lt;sites&gt;
	&lt;site-id&gt;Site4&lt;/site-id&gt;
	&lt;apply-template&gt;Template-VPNsite-Customer1&lt;/apply-template&gt;
	&lt;service&gt;
		&lt;apply-template&gt;Template-VoiceCoS-Cust1&lt;/apply-template&gt;
		&lt;svc-input-bandwidth&gt;100000000&lt;/svc-input-bandwidth&gt;
		&lt;svc-output-bandwidth&gt;100000000&lt;/svc-output-bandwidth&gt;
	&lt;/service&gt;
&lt;/sites&gt;
&lt;sites&gt;
	&lt;site-id&gt;Site5&lt;/site-id&gt;
	&lt;apply-template&gt;Template-VPNsite-Customer1&lt;/apply-template&gt;
	&lt;service&gt;
		&lt;apply-template&gt;Template-VoiceCoS-Cust1&lt;/apply-template&gt;
		&lt;svc-input-bandwidth&gt;450000000&lt;/svc-input-bandwidth&gt;
		&lt;svc-output-bandwidth&gt;450000000&lt;/svc-output-bandwidth&gt;
	&lt;/service&gt;
&lt;/sites&gt;
	  </artwork>
	  </figure>
	  </section>
	</section>
      
	<section anchor="usage" title="Service model usage example">
	<t>
	As explained in <xref target="howto"/>, this service model is intended to be instantiated at a management layer and is not intended to be used
	directly on network elements. The management system serves as a central point of configuration of the overall service.
	</t>
	<t>This section provides an example on how a management system can use this model to configure an IPVPN service on network elements.</t>
	<t>The example wants to achieve the provisionning of a VPN service for 3 sites using hub and spoke topology. One of the site will be dual homed and loadsharing is expected.</t>
	
	<figure>
	<artwork>
+-------------------------------------------------------------+
|   Hub_Site  ------ PE1               PE2 ------ Spoke_Site1 |
|      |                   +----------------------------------+   
|      |                   |                           
|      |                   +----------------------------------+                  
|   Hub_Site  ------ PE3               PE4 ------ Spoke_Site2 |
+-------------------------------------------------------------+
	</artwork>
	</figure>
	<t>
	The following XML describes the overall simplified service configuration of this VPN.
	</t>
	<figure>
	<artwork>
&lt;vpn-svc&gt;
	&lt;name&gt;VPN1&lt;/name&gt;
	&lt;id&gt;12456487&lt;/id&gt;
	&lt;customer-name&gt;CUSTOMER1&lt;/customer-name&gt;
	&lt;topology&gt;hub-spoke&lt;/topology&gt;
&lt;/vpn-svc&gt;
	</artwork>
	</figure>
	<t>
	When receiving the request for provisionning the VPN service, the management system will internally (or through discussion with other OSS component) allocates
	VPN route-targets. In this specific case two RTs will be allocated (100:1 for Hub and 100:2 for Spoke). The output below describes the configuration of Spoke1.
	</t>
	<figure>
	<artwork>
&lt;sites&gt;
	&lt;site-id&gt;Spoke_Site1&lt;/site-id&gt;
	&lt;native-vpn&gt;VPN1&lt;/native-vpn&gt;
	&lt;site-type&gt;spoke-site&lt;/site-type&gt;
	&lt;site-diversity&gt;
		&lt;type&gt;pe-diverse&lt;/type&gt;
		&lt;site-group&gt;100&lt;/site-group&gt;
	&lt;/site-diversity&gt;
	&lt;location&gt;
		&lt;city-code&gt;NY&lt;/city-code&gt;
		&lt;country-code&gt;US&lt;/country-code&gt;
	&lt;/location&gt;
	&lt;attachment&gt;
		&lt;connection&gt;
			&lt;ipv4&gt;
				&lt;subnet-prefix&gt;203.0.113.0/30&lt;/subnet-prefix&gt;
			&lt;/ipv4&gt;
			&lt;routing-protocol&gt;
				&lt;type&gt;bgp&lt;/type&gt;
				&lt;bgp&gt;
					&lt;address-family&gt;ipv4-unicast&lt;/address-family&gt;
				&lt;/bgp&gt;
			&lt;/routing-protocol&gt;
		&lt;/connection&gt;
	&lt;/attachment&gt;
	&lt;management&gt;
		&lt;type&gt;provider-managed&lt;/type&gt;
		&lt;management-transport&gt;ipv4-unicast&lt;/management-transport&gt;
		&lt;address&gt;10.46.1.1&lt;/address&gt;
	&lt;/management&gt;
	&lt;service&gt;
		&lt;svc-input-bandwidth&gt;450000000&lt;/svc-input-bandwidth&gt;
		&lt;svc-output-bandwidth&gt;450000000&lt;/svc-output-bandwidth&gt;
	&lt;/service&gt;
	&lt;customer-specific-information&gt;
		&lt;customer-lan-connection&gt;
			&lt;address&gt;192.0.2.254&lt;/address&gt;
			&lt;lan-protocol&gt;ipv4-unicast&lt;/lan-protocol&gt;
		&lt;/customer-lan-connection&gt;
		&lt;cascaded-lan-prefixes&gt;
			&lt;ipv4-lan-prefixes&gt;
				&lt;lan&gt;198.51.100.0/30&lt;/lan&gt;
				&lt;nexthop&gt;192.0.2.253&lt;/nexthop&gt;
			&lt;/ipv4-lan-prefixes&gt;
			&lt;ipv4-lan-prefixes&gt;
				&lt;lan&gt;198.51.100.4/30&lt;/lan&gt;
				&lt;nexthop&gt;192.0.2.253&lt;/nexthop&gt;
			&lt;/ipv4-lan-prefixes&gt;
			&lt;ipv4-lan-prefixes&gt;
				&lt;lan&gt;198.51.100.8/30&lt;/lan&gt;
				&lt;nexthop&gt;192.0.2.253&lt;/nexthop&gt;
			&lt;/ipv4-lan-prefixes&gt;
		&lt;/cascaded-lan-prefixes&gt;
	&lt;/customer-specific-information&gt;
&lt;/sites&gt;
	</artwork>
	</figure>
	<t>
	When receiving the request for provisionning Spoke1 site, the management system MUST allocate network ressources for this site. It MUST first decide
	the target network elements to provision the access, and especially the PE router (and may be an aggregation switch).
	As described in <xref target="site-location-prov"/>, the management system MAY use the location information and MUST use the site-diversity constraint to find the appropriate PE.
	In this case, we consider Spoke1 requires PE diversity with Hub and that management system allocate PEs based on lowest distance. Based on the location information, the management
	system finds the available PEs in the nearest area of the customer and picks one that fits the site-diversity constraint.
	</t>
	<t>
	When the PE is chosen, management system needs to allocate interface resources on the node, one interface is so picked from the PE available pool.
	The management system can start provisioning the PE node by using any mean (Netconf, CLI, ...). The management system will check if a VRF is already present that fits the needs.
	If not, it will provision the VRF : Route distinguisher will come from internal allocation policy model, route-targets are coming from the native-vpn configuration of the site (management system allocated some RTs for the VPN).
	As the site is a spoke site (site-type), the management system knows which RT must be imported and exported. As the site is provider managed, some management route-targets may also be added (100:5000).	
	Standard provider VPN policies MAY also be added in the configuration.
	<figure>
	<artwork>
Example of generated PE configuration :

ip vrf Customer1
 export-map STD-CUSTOMER-EXPORT      &lt;---- Standard SP configuration
 route-distinguisher 100:3123234324
 route-target import 100:1
 route-target import 100:5000        &lt;---- Standard SP configuration
 route-target export 100:2                    for provider managed
!
	</artwork>
	</figure>
	</t>
	<t>
	When the VRF has been provisioned, the management system can start configuring the access on the PE using the allocated interface information. IP addressing is derived from the subnet-prefix of the connection.
	One address will be picked from the subnet for the PE, another will be used for the CE configuration. 
	Routing protocols will also be configured on the PE, bgp will be used as requested in the service model. Peering addresses will be derived from subnet-prefix. PE AS number is well known and as CE is provider managed, CE AS number can be automatically allocated by the management system.
	Some provider standard configuration templates may also be added.
	</t>
	<figure>
	<artwork>
Example of generated PE configuration :

interface Ethernet1/1/0.10
 encapsulation dot1q 10
 ip vrf forwarding Customer1 
 ip address 203.0.113.1 255.255.255.252 &lt;---- Comes from subnet-prefix
 ip access-group STD-PROTECT-IN     &lt;---- Standard SP configuration
!
router bgp 100
 address-family ipv4 vrf Customer1
  neighbor 203.0.113.2 remote-as 65000   &lt;---- Comes from subnet-prefix
                                              and allocated CE ASN
  neighbor 203.0.113.2 route-map STD in  &lt;---- Standard SP configuration
  neighbor 203.0.113.2 filter-list 10 in &lt;---- Standard SP configuration
!
ip route vrf Customer1 203.0.113.254 255.255.255.255 203.0.113.2 tag 50 
! Static route for provider administration of CE
!
	</artwork>
	</figure>
	<t>
	As the CE router is not reachable at this stage, the management system can produce a complete CE configuration that can be uploaded to the node by manual operation before sending the CE to customer premise.
	The CE configuration will be built as for the PE. Based on the CE type (vendor/model) allocated to the customer and bearer information, the management system knows which interface must be configured on the CE.
	Interface parameters like IP addressing are derived from subnet-prefix taking into account how management system distributes addresses between PE and CE within the subnet.
	Routing protocol configuration is done as for the PE, in this example, bgp peering address is retrieved from subnet prefix and internal allocation policy, remote AS number is well known.
	LAN addresses will be added to the configuration and exported to BGP. This will permit to produce a plug'n'play configuration for the CE.
	</t>
	<figure>
	<artwork>
Example of generated CE configuration :

interface Loopback10
 description "Administration"
 ip address 203.0.113.254 255.255.255.255
!
interface FastEthernet10
 description "WAN"
 ip address 203.0.113.2 255.255.255.252 &lt;---- Comes from subnet-prefix
!
interface FastEthernet11
 description "LAN"
 ip address 192.0.2.254 255.255.255.252 &lt;---- Comes from
                                                 customer-lan-connection
!
router bgp 65000
  redistribute static route-map STATIC2BGP &lt;---- Standard SP 
                                                    configuration
  neighbor 203.0.113.1 remote-as 100     &lt;---- Comes from subnet-prefix
                                              and allocated CE ASN
!
route-map STATIC2BGP permit 10
 match tag 10
!
ip route 198.51.100.0 255.255.255.252 192.0.2.253 tag 10
ip route 198.51.100.4 255.255.255.252 192.0.2.253 tag 10
ip route 198.51.100.8 255.255.255.252 192.0.2.253 tag 10

	</artwork>
	</figure>
    </section>
	
    <section anchor="interaction" title="Interaction with Other YANG Modules">
	<t>As expressed in <xref target="howto"/>, this service module is intended to be instantiated in management system and not directly on network elements.</t>
	<t>It will be the role of the management system to configure the network elements. The management system MAY be modular, 
	so the component instantiating the service model (let's call it service component) and the component responsible for network element configuration (let's call it configuration component) MAY be different.
	</t>
	<figure>
	<artwork>
	     L3VPN-SVC         |         
	       service model   |
		                   |
                +----------------------+ 
                |   Service component  | service datastore
                +----------------------+ 
				           | 
						   |
				+----------------------+ 
           +----|   Config component   |-------+ 
          /     +----------------------+        \   Network
         /            /            \             \  Configuration models
		/		     /              \             \          
       /            /                \             \
+++++++         ++++++++             ++++++++       +++++++
+ CEA + ------- + PE A +             + PE B + ----- + CEB +  Config
+++++++         ++++++++             ++++++++       +++++++  datastore

Site A                                       Site B
	</artwork>
	</figure>
	<t>
	In the previous sections, we provided some example of translation of service provisioning request to router configuration lines as illustration.
	In the NetConf/Yang ecosystem, it will be expected NetConf/YANG to be used between configuration component and network elements to configure the
	requested service on these elements.
	</t>
	<t>
	In this framework, it is expected from standardization to also work on specific configuration YANG modelization of service components on network elements.
	There will be so a strong relation between the abstracted view provided by this service model and the detailed configuration view that will be provided by specific
	configuration models for network elements.
	</t>
	<t>Authors of this document are expecting definition of YANG models for network elements on this non exhaustive list of items :
	<list style="symbols">
	<t>VRF definition including VPN policy expression.</t>
	<t>Physical interface.</t>
	<t>IP layer (IPv4, IPv6).</t>
	<t>QoS : classification, profiles...</t>
	<t>Routing protocols : support of configuration of all protocols listed in the document, as well as routing policies associated with these protocols.</t>
	<t>Multicast VPN.</t>
	<t>Network Address Translation.</t>
	<t>...</t>
	</list>
	</t>
	<t>
	Example of VPN site request at service level using this model :
	</t>
	<figure>
	<artwork>
&lt;sites&gt;
 &lt;site-id&gt;Site A&lt;/site-id&gt;
 &lt;native-vpn&gt;VPN1&lt;/native-vpn&gt;
 &lt;site-type&gt;any-to-any-site&lt;/site-type&gt;
 &lt;attachment&gt;
  &lt;connection&gt;
   &lt;ipv4&gt;
    &lt;address-allocation-type&gt;static-address&lt;/address-allocation-type&gt;
    &lt;subnet-prefix&gt;203.0.113.0/30&lt;/subnet-prefix&gt;
   &lt;/ipv4&gt;
   &lt;routing-protocol&gt;
    &lt;name&gt;static&lt;/name&gt;
    &lt;type&gt;static&lt;/type&gt;
   &lt;/routing-protocol&gt;
  &lt;/connection&gt;
 &lt;/attachment&gt;
 &lt;customer-specific-information&gt;
  &lt;cascaded-lan-prefixes&gt;
   &lt;ipv4-lan-prefixes&gt;
    &lt;lan&gt;198.51.100.0/30&lt;/lan&gt;
    &lt;nexthop&gt;192.0.2.253&lt;/nexthop&gt;
   &lt;/ipv4-lan-prefixes&gt;
  &lt;/cascaded-lan-prefixes&gt;
 &lt;/customer-specific-information&gt;
&lt;/sites&gt;
   </artwork>
	  </figure>
	  
	<t>
	In the service example above, it is expected that the service component requests to the configuration component of the management system the configuration of the service elements.
	If we consider that service component selected a PE (PE A) as target PE for the site, the configuration component will need to push the configuration to PE A.
	The configuration component will use several YANG data models to define the configuration to be applied to PE A. The XML configuration of PE-A may look like this :
	</t>
	<figure>
	<artwork>
&lt;if:interfaces&gt;
     &lt;if:interface&gt;
      &lt;if:name&gt;eth0&lt;/if:name&gt;
      &lt;if:type&gt;ianaift:ethernetCsmacd&lt;/if:type&gt;
      &lt;if:description&gt;
       Link to CEA.
      &lt;/if:description&gt;
      &lt;ip:ipv4&gt;
       &lt;ip:address&gt;
        &lt;ip:ip&gt;203.0.113.1&lt;/ip:ip&gt;
        &lt;ip:prefix-length&gt;30&lt;/ip:prefix-length&gt;
       &lt;/ip:address&gt;
       &lt;ip:forwarding&gt;true&lt;/ip:forwarding&gt;
      &lt;/ip:ipv4&gt;
     &lt;/if:interface&gt;
&lt;/if:interfaces&gt;
&lt;rt:routing&gt;
     &lt;rt:routing-instance&gt;
      &lt;rt:name&gt;VRF_CustA&lt;/rt:name&gt;
	  &lt;rt:type&gt;l3vpn:vrf&lt;/rt:type&gt;
      &lt;rt:description&gt;VRF for CustomerA&lt;/rt:description&gt;
	  &lt;l3vpn:route-distinguisher&gt;
	  100:1546542343
	  &lt;/l3vpn:route-distinguisher&gt;
	  &lt;l3vpn:import-rt&gt;100:1&lt;/l3vpn:import-rt&gt;
	  &lt;l3vpn:export-rt&gt;100:1&lt;/l3vpn:export-rt&gt;
      &lt;rt:interfaces&gt;
       &lt;rt:interface&gt;
        &lt;rt:name&gt;eth0&lt;/rt:name&gt;
       &lt;/rt:interface&gt;
      &lt;/rt:interfaces&gt;
      &lt;rt:routing-protocols&gt;
       &lt;rt:routing-protocol&gt;
        &lt;rt:type&gt;rt:static&lt;/rt:type&gt;
        &lt;rt:name&gt;st0&lt;/rt:name&gt;
        &lt;rt:static-routes&gt;
         &lt;v4ur:ipv4&gt;
          &lt;v4ur:route&gt;
           &lt;v4ur:destination-prefix&gt;
		   198.51.100.0/30
		   &lt;/v4ur:destination-prefix&gt;
           &lt;v4ur:next-hop&gt;
			&lt;v4ur:next-hop-address&gt;
			203.0.113.2
			&lt;/v4ur:next-hop-address&gt;
		   &lt;/v4ur:next-hop&gt;
          &lt;/v4ur:route&gt;
         &lt;/v4ur:ipv4&gt;
        &lt;/rt:static-routes&gt;
       &lt;/rt:routing-protocol&gt;
      &lt;/rt:routing-protocols&gt;
     &lt;/rt:routing-instance&gt;
&lt;/rt:routing&gt;
	
	</artwork>
	</figure>

	
    </section>

    <section anchor="yang" title="YANG Module">

      <figure>
	&ietf-l3vpn-svc.yang;
      </figure>

    </section>

	<section anchor="todolist" title="To do list / Open questions / Open issues">
	<t>Open questions : 
	<list style="symbols">
	<t>Do we need to handle service chaining for the L3VPN service ?</t>
	</list>
	</t>
	<t>Open issues : 
	<list style="symbols">
	<t></t>
	</list>
	</t>
	<t>TODO : 
	<list style="symbols">
	<t>Security items</t>
	<t>Bearer details</t>
	<t>...</t>
	</list>
	</t>
	</section>
	
    <section anchor="Security" title="Security Considerations">
    <t>TBD.</t> 
    </section>

	<section anchor="Contributors" title="Contributors">
     
    </section>
	
    <section anchor="Acknowledgements" title="Acknowledgements">
      <t>Thanks to Qin Wu, Maxim Klyus, Luis Miguel Contreras, Gregory Mirsky,
   Zitao Wang, Jing Zhao, and Andrew Leu for the contributions to the
   document. 
</t>
    </section>

    <section anchor="IANA" title="IANA Considerations">
      <t>TBD.</t>
    </section>

  </middle>
  <back>
    <references title="Normative References">
      &RFC2119;
      &RFC6020;
	  &RFC4577;
	  &RFC4862;
	  &RFC4364;
	  &RFC4110;
	  &RFC6241;
	  &RFC6513;
    </references>
    <section anchor="rpc-example" title="Example: NETCONF &lt;get&gt; Reply">
      <t>This section gives an example of a reply to the NETCONF
      &lt;get&gt; request for a device that implements the data model
      defined in this document.  The example is written in XML.</t>


    </section>
  </back>
</rfc>
